//Clasificar compras por canales y edad promedio de usuarios, soo sucursales Londes.
//Mostrar canal y edad promedio en orden de edad ascendente

use('sample_supplies')

db.sales.aggregate([

    //$match:filtrar
    { $match: {"storeLocation":"London"}},

    {
        //$group: agrupar
        $group: {
            _id: "$purchaseMethod",
            avgAge: {$avg: "$customer.age"}
        }
    },

    {
        //$project:modelar
        $project: {
            _id:0,
            metodo:"$_id",
            mediaEdad:{$round:["$avgAge"]}
        }
    },

    {
        //$sort:ordenar
        $sort:{
            "mediaEdad":1
        }
    }
])

/*
    $match: es un operador que filtra los documentos de entrada para permitir que 
    solo pasen los documentos que coinciden con la condición especificada. 
    (En nuestro caso, filtramos por la ubicación de la tienda en Londres.)

    $group: es un operador que agrupa los documentos de entrada por un campo específico, 
    en nuestro caso, el método de compra. También calcula la edad promedio de los clientes

    $project: es un operador que cambia la forma de los documentos de entrada.
    En nuestro caso, cambiamos el nombre de los campos y redondeamos la edad promedio.

    $sort: es un operador que ordena los documentos de entrada según el campo especificado.
    En nuestro caso, ordenamos por edad promedio.
*/

/*
    Agregation Framework es para consultas mas complejas.
    Hay que analizar opciones de costos y consultas

    
*/